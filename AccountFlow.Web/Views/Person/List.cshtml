@model PersonViewModel

<h1>Persons List</h1>

<div class="mb-3">
    <form method="get" asp-action="List">
        <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Search by name or ID"
            class="form-control w-50 d-inline-block" />
        <button type="submit" class="btn btn-primary">Search</button>
    </form>
</div>

<div class="mb-3">
    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-code="@Model.Person?.Code"
        data-bs-target="#addPersonModal">
        Add New Person
    </button>
</div>
<table class="table">
    <thead>
        <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Surname</th>
            <th>ID Number</th>
            <th>Account Number</th>

            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var person in Model.Persons)
        {
            <tr>
                <td>@person.Code</td>
                <td>@person.Name</td>
                <td>@person.Surname</td>

                <td>@person.IdNumber</td>
                <td>
                    @foreach (var account in person.Accounts)
                    {
                        <p>@account.AccountNumber</p> <!-- Display Account Number -->
                    }
                </td>
                <td>
                    <a asp-controller="Person" asp-action="Details" asp-route-id="@person.Code"
                        class="btn btn-info btn-sm">View</a>
                    <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#addPersonModal"
                        data-code="@person.Code" data-name="@person.Name" data-surname="@person.Surname"
                        data-idnumber="@person.IdNumber">
                        Edit
                    </button>

                    <!-- Delete Button with Confirmation Modal -->
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal"
                        data-bs-target="#confirmDeleteModal" data-id="@person.Code">
                        Delete
                    </button>

                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <ul class="pagination">
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link"
                    href="@Url.Action("List", new { pageNumber = i, searchTerm = Model.SearchTerm })">@i</a>
            </li>
        }
    </ul>
</div>

<!-- Add Person Modal -->
<partial name="_PersonModal" model="new Person()" />

<partial name="_DeleteConfirmationModal" />




</div>

@section Scripts {

    <script>
        $('#addPersonModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var code = button.data('code');
            var name = button.data('name');
            var surname = button.data('surname');
            var idNumber = button.data('idnumber');

            console.log("Code:", code);
            console.log("Name:", name);
            console.log("Surname:", surname);
            console.log("ID Number:", idNumber);

            var modal = $(this);

            if (code) {
                modal.find('.modal-title').text('Edit Person' + name);
                modal.find('#Code').val(code);
                modal.find('input[name="Name"]').val(name);
                modal.find('input[name="Surname"]').val(surname);
                modal.find('input[name="IdNumber"]').val(idNumber);

                //Set form action to EditPerson
                $('#personForm').attr('action', '/Person/EditPerson');

            } else {
                modal.find('.modal-title').text("Add New Person");
                modal.find('#Code').val(0);
                modal.find('input[name="Name]').val('');
                modal.find('input[name="Surname"]').val('');
                modal.find('input[name="IdNumber"]').val('');

                //Set form action to CreatePerson 
                $('#personForm').attr('action', '/Person/CreatePerson');
            }


        });

        // Handle Delete Confirmation Modal
        $('#confirmDeleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);  // Button that triggered the modal
            var personId = button.data('id');    // Extract info from data-id attribute
            $('#deletePersonId').val(personId);  // Set the value in the hidden input
        });

        document.addEventListener("DOMContentLoaded", function () {
            var accountForm = document.getElementById("accountForm");

            accountForm.addEventListener("submit", function (event) {
                var balanceInput = document.querySelector("input[name='OutstandingBalance']");
                var balanceValue = parseFloat(balanceInput.value);

                if (isNaN(balanceValue) || balanceValue < 0) {
                    alert("Initial balance cannot be less than zero.");
                    event.preventDefault(); // Prevent form submission
                }
            });
        });
    </script>
}
